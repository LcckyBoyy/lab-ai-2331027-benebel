import pandas as pd
import numpy as np

df = pd.read_csv('auto-mpg.csv')

#cleaning
df = df.replace('?', np.nan)
df = df.dropna()
df['horsepower'] = df['horsepower'].astype(float)
df = df.drop_duplicates()

#transformasi
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
df[['displacement', 'horsepower', 'weight', 'acceleration']] = scaler.fit_transform(df[['displacement', 'horsepower', 'weight', 'acceleration']])
df = pd.get_dummies(df, columns=['origin'])

#pisah data
from sklearn.model_selection import train_test_split

X = df[['displacement', 'horsepower', 'weight', 'acceleration', 'model year', 'origin_1', 'origin_2', 'origin_3']]
y = df['mpg']  # atau km per liter jika diubah
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Train Linear Regression Model
from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X_train, y_train)

#Model Evaluation
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)
print('MAE:', mae)
print('MSE:', mse)
print('RMSE:', rmse)
print('RÂ²:', r2)

coeffs = pd.Series(model.coef_, index=X.columns)
print(coeffs)

